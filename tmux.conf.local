# 24 bit true color
set -g terminal-overrides ',xterm-256color:Tc'

# Integrate with OS X pasteboard.
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

set -g set-titles on
set -g set-titles-string "#S #I:#W"

set-option -g status-right "#(tmux-spotify-info) | #(date '+%a, %b %d - %I:%M') "

# Use emacs / readline key-bindings in the tmux command prompt
set-option -g status-keys "emacs"

# Allow the session name in status left to display up to 50 characters
set-option -g status-left-length 50
set-option -g status-right-length 80 # default 40

# Break out the current pane to a window
bind b break-pane -d

# Commands for new splits
bind | split-window -h -c '#{pane_current_path}'
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resizing Splits
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 2

# Allow scrolling with the mouse
set -g mouse on

# https://medium.freecodecamp.org/tmux-in-practice-scrollback-buffer-47d5ffa71c93
# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer

unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
  send-keys -X copy-pipe "pbcopy" \;\
    send-keys -X clear-selection

bind p paste-buffer
bind C-p choose-buffer


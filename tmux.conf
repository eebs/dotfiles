# Ctrl-s prefix key. Send C-s with repeat option via C-s C-s
unbind-key C-b
set -g prefix C-s
bind -r C-s send-prefix
# # prefix -> back-one-character
# bind-key C-b send-prefix
# # prefix-2 -> forward-incremental-history-search
# bind-key C-s send-prefix -2

set -g set-titles on
set -g set-titles-string "#S #I:#W"

set -g default-command "zsh"

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g display-panes-time 350

# improve colors
set -g default-terminal 'screen-256color'
# 24 bit true color. The 'alacritty' portion below must match the value of
# $TERM outside tmux.
# Alacritty now uses 'alacritty' for the $TERM variable, but will fall back
# to xterm-256color if alacritty isn't in the terminfo database.
set -ga terminal-overrides ',alacritty:Tc'

# increase scrollback lines
set -g history-limit 10000

# Use emacs / readline key-bindings in the tmux command prompt
set -g status-keys "emacs"

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Allow scrolling with the mouse
set -g mouse on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Status bar display.
set -g status-left-length 50
set -g status-right-length 80
set -g status-left ""
set -g status-right "#(tmux-spotify-info) | #S | #(battery -t -p -e) |  #(date '+%a, %b %d - %I:%M') "

# soften status bar color from harsh green to light gray
set -g status-style bg='#666666',fg='#aaaaaa'

# Fuzzy find for switching sessions
bind s run-shell "tmux list-sessions \
  -F '##{session_activity}:##{session_name}' \
  | sort -nr \
  | cut -d ':' -f 2 \
  | grep -v \"^$(tmux display-message -p '#S')\$\" \
  | fzf-tmux -p --reverse \
  | xargs tmux switch-client -t"

# Break out the current pane to a window
bind b break-pane -d

# Create a new session from an existing split
bind C-b send-keys 'tat && exit' 'C-m'

# Close a session and go to the next one
bind-key ! run-shell '(tmux switch-client -l || tmux switch-client -n) && tmux kill-session -t "#S" || tmux kill-session'

# Join the specified pane to the current pane in a new split
bind-key u command-prompt -p "join pane from:" "join-pane -h -s '%%'"

bind c new-window -c "#{pane_current_path}"

# Open recent folder in new session
bind C-t split-window -v "source ~/.zsh/configs/navigation.zsh && tm-select-session"

bind g split-window -c "#{pane_current_path}" -h -l 110 'gitsh'
bind t run-shell -b 'gittower .'
bind i new-session -s 'irc'

# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Quick session switching back and forth.
bind-key Space switch-client -l

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

# Commands for new splits
bind | split-window -h -c '#{pane_current_path}'
bind \\ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'

# Resizing Splits
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# https://medium.freecodecamp.org/tmux-in-practice-scrollback-buffer-47d5ffa71c93
# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
  send-keys -X copy-pipe "pbcopy" \;\
    send-keys -X clear-selection

bind p paste-buffer
bind C-p choose-buffer

# don't suspend-client
unbind-key C-z
